{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell 5480\\\\FSD Projects\\\\Blog-App\\\\client\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const [username, setUser] = useState('');\n  const [password, setPass] = useState('');\n  const [redirect, setRedirect] = useState(false);\n  async function loginUser(event) {\n    event.preventDefault();\n    const response = await fetch('http://localhost:4000/login', {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password\n      }),\n      headers: {\n        'Content-type': 'application/json'\n      },\n      credentials: 'include'\n    });\n    if (response.status === 200) {\n      setRedirect(true);\n    } else {\n      alert('Invalid credentials!');\n    }\n  }\n  if (redirect) {\n    /*#__PURE__*/_jsxDEV(Navigate, {\n      to: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"loginForm\",\n    onSubmit: loginUser,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter username\",\n      value: username,\n      onChange: event => setUser(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Enter password\",\n      value: password,\n      onChange: event => setPass(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"0eibnwNLQweXS5Eia5StiLxKdWA=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","Navigate","jsxDEV","_jsxDEV","Login","_s","username","setUser","password","setPass","redirect","setRedirect","loginUser","event","preventDefault","response","fetch","method","body","JSON","stringify","headers","credentials","status","alert","to","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","children","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/Dell 5480/FSD Projects/Blog-App/client/src/pages/Login.js"],"sourcesContent":["import {useState} from 'react';\r\nimport {Navigate} from 'react-router-dom';\r\nexport default function Login()\r\n{\r\n    const [username, setUser] = useState('');\r\n    const [password, setPass] = useState('');\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n    async function loginUser(event)\r\n    {\r\n        event.preventDefault();\r\n        const response = await fetch('http://localhost:4000/login', {\r\n            method: 'POST',\r\n            body: JSON.stringify({username, password}),\r\n            headers: {'Content-type': 'application/json'},\r\n            credentials:'include'\r\n        });\r\n        if(response.status === 200)\r\n        {\r\n            setRedirect(true);\r\n        }\r\n        else\r\n        {\r\n            alert('Invalid credentials!');\r\n        }\r\n    }\r\n\r\n    if(redirect)\r\n    {\r\n        <Navigate to />\r\n    }\r\n\r\n    return(\r\n        <form className=\"loginForm\" onSubmit={loginUser}>\r\n            <h1>Login</h1>\r\n            <input type=\"text\" placeholder=\"Enter username\"\r\n             value={username} \r\n             onChange={(event) => setUser(event.target.value)} />\r\n            <input type=\"password\" placeholder=\"Enter password\"\r\n             value={password}\r\n             onChange={(event) => setPass(event.target.value)} />\r\n            <button type=\"submit\">Login</button>\r\n        </form>\r\n    )\r\n}"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,SAAQC,QAAQ,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1C,eAAe,SAASC,KAAKA,CAAA,EAC7B;EAAAC,EAAA;EACI,MAAM,CAACC,QAAQ,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,QAAQ,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE/C,eAAeY,SAASA,CAACC,KAAK,EAC9B;IACIA,KAAK,CAACC,cAAc,EAAE;IACtB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;MACxDC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACd,QAAQ;QAAEE;MAAQ,CAAC,CAAC;MAC1Ca,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC7CC,WAAW,EAAC;IAChB,CAAC,CAAC;IACF,IAAGP,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAC1B;MACIZ,WAAW,CAAC,IAAI,CAAC;IACrB,CAAC,MAED;MACIa,KAAK,CAAC,sBAAsB,CAAC;IACjC;EACJ;EAEA,IAAGd,QAAQ,EACX;IACI,aAAAP,OAAA,CAACF,QAAQ;MAACwB,EAAE;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EACnB;EAEA,oBACI1B,OAAA;IAAM2B,SAAS,EAAC,WAAW;IAACC,QAAQ,EAAEnB,SAAU;IAAAoB,QAAA,gBAC5C7B,OAAA;MAAA6B,QAAA,EAAI;IAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACd1B,OAAA;MAAO8B,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,gBAAgB;MAC9CC,KAAK,EAAE7B,QAAS;MAChB8B,QAAQ,EAAGvB,KAAK,IAAKN,OAAO,CAACM,KAAK,CAACwB,MAAM,CAACF,KAAK;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACrD1B,OAAA;MAAO8B,IAAI,EAAC,UAAU;MAACC,WAAW,EAAC,gBAAgB;MAClDC,KAAK,EAAE3B,QAAS;MAChB4B,QAAQ,EAAGvB,KAAK,IAAKJ,OAAO,CAACI,KAAK,CAACwB,MAAM,CAACF,KAAK;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACrD1B,OAAA;MAAQ8B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACjC;AAEf;AAACxB,EAAA,CA1CuBD,KAAK;AAAAkC,EAAA,GAALlC,KAAK;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}