{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell 5480\\\\FSD Projects\\\\Blog-App\\\\client\\\\src\\\\pages\\\\CreatePost.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modules = {\n  toolbar: [[{\n    'header': [1, 2, false]\n  }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n    'list': 'ordered'\n  }, {\n    'list': 'bullet'\n  }, {\n    'indent': '-1'\n  }, {\n    'indent': '+1'\n  }], ['link', 'image'], ['clean']]\n};\nconst formats = ['header', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link', 'image'];\nexport default function CreatePost() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [summary, setSummary] = useState('');\n  const [content, setContent] = useState('');\n  const [file, setFile] = useState('');\n  async function createNewPost(event) {\n    const data = new FormData();\n    data.set('title', title);\n    data.set('summary', summary);\n    data.set('content', content);\n    data.set('file', file);\n    event.preventDefault();\n    await fetch('http://localhost:4000/post', {\n      method: 'POST',\n      body: data\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: createNewPost,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"title\",\n      placeholder: \"Title\",\n      value: title,\n      onChange: event => setTitle(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"summary\",\n      placeholder: \"Summary\",\n      value: summary,\n      onChange: event => setSummary(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: event => setFile(event.target.files)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n      modules: modules,\n      formats: formats,\n      value: content,\n      onChange: value => setContent(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Create post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(CreatePost, \"f1yiyoZGv7ZpUZ6uaFUnbOvgwk8=\");\n_c = CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["useState","ReactQuill","jsxDEV","_jsxDEV","modules","toolbar","formats","CreatePost","_s","title","setTitle","summary","setSummary","content","setContent","file","setFile","createNewPost","event","data","FormData","set","preventDefault","fetch","method","body","onSubmit","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","files","_c","$RefreshReg$"],"sources":["C:/Users/Dell 5480/FSD Projects/Blog-App/client/src/pages/CreatePost.js"],"sourcesContent":["import { useState } from 'react';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\nconst modules = {\r\n    toolbar: [\r\n      [{ 'header': [1, 2, false] }],\r\n      ['bold', 'italic', 'underline','strike', 'blockquote'],\r\n      [{'list': 'ordered'}, {'list': 'bullet'}, {'indent': '-1'}, {'indent': '+1'}],\r\n      ['link', 'image'],\r\n      ['clean']\r\n    ],\r\n  };\r\n\r\nconst formats =  [\r\n    'header',\r\n    'bold', 'italic', 'underline', 'strike', 'blockquote',\r\n    'list', 'bullet', 'indent',\r\n    'link', 'image'\r\n  ];\r\n\r\nexport default function CreatePost()\r\n{\r\n    const [title, setTitle] = useState('');\r\n    const [summary, setSummary] = useState('');\r\n    const [content, setContent] = useState('');\r\n    const [file, setFile] = useState('');\r\n    async function createNewPost(event)\r\n    {\r\n        const data = new FormData();\r\n    data.set('title', title);\r\n    data.set('summary', summary);\r\n    data.set('content', content);\r\n    data.set('file', file);\r\n\r\n        event.preventDefault();\r\n        await fetch('http://localhost:4000/post',{\r\n            method: 'POST',\r\n            body: data\r\n        });\r\n        \r\n    }\r\n\r\n    return(\r\n        <form onSubmit={createNewPost}>\r\n            <input type=\"title\" placeholder=\"Title\"\r\n             value={title} \r\n             onChange={event => setTitle(event.target.value)} />\r\n            <input type=\"summary\" placeholder=\"Summary\" \r\n             value={summary}\r\n             onChange={event => setSummary(event.target.value)} />\r\n            <input type=\"file\" onChange={event => setFile(event.target.files)} />\r\n            <ReactQuill modules={modules} formats={formats} \r\n             value={content}\r\n             onChange={value => setContent(value)} />\r\n            <button>Create post</button>\r\n        </form>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}